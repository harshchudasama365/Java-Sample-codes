Spring Day-5
---------------------------------------------------
1. RestController - Student-Entity-JpaRepository
2. JpaRepository-Methods-CRUD-Entity
3. CRUD-StudentRestController-POSTMAN-JSON
4. StatusCode-ResponseEntity
5. CRUD-StudentRestController-Angular 
(Spring Boot + Angular integration)
------------------------------------------------
Revision-Spring-SpringMVC-SpringBoot-Devops+JPA
--------------------------------------------------
MET-2
Devops=10
JPA-Hibernate=20
Spring-SpringMVC+SpringBootRESTAPI=20
---------------------------------------------------

@RestController=@Controller+@ResponseBody
1-Entity
1-DAO
1-Service
1-App--SpringBootApplication--sysout("App is started")
1-RESTController

GET-DELETE-POST(create new entity)--JSON-Object--PUT
@RequestMapping(method=RequestMethod.GET/PUT/DELETE/POST)

Method-level Annotations
@GetMapping--GET-->Get the data from SERVER to CLIENT
@PostMapping--POST--->Create the ENTITY from CLIENT and saved to SERVER DB
@DeleteMapping--DELETE--->Delete the Entity from SERVER side DB
@PutMapping--->UPDATE-->To update the data from CLIENT to SERVER
---------------------------------------------------
Layers
4 layers in Spring boot
-----------------------------------------------------------	
@RestController is used for creating restful controllers,
which do not use a view technology. 
The methods typically return XML, JSON, or plain text.
------------------------------------------------------------
ResponseEntity : Sending the data in format of entity and 
we want the reponse back to the client in the format of
Entity as a response only
 
Status : Client knows the operations by using the status

----------------------------------------------------------
--------------------Request mapping------------------------
@RequestMapping(method = RequestMethod.GET)
@RequestMapping(value = "/users", method = RequestMethod.GET)
public Users getUsers() {
}

@PostMapping("/createuser")
//@RequestMapping(value = "/users", method = RequestMethod.POST)
public User createUser(User user) {
}
Rest API Response Codes

200 – OK 
201 – Created
202 – Accepted
203 – Non-Authoritative Information
204 – No Content
400 - Data/url missing not found
500/501 internal server error
--------------------------------------------------------------
Method	Description

GET	Fetch status line, Response body, Header etc.
POST	Perform request using request payload mostly in creating a record at the server
PUT	Useful in manipulating/updating the resource using Request payload
DELETE	Deletes information relating to the target resource.
-------------------------------------------------------------------
JPA-Repository
------------------------------------------------------------
JPA-Repository is an interface
gives the different methods to the user
save the entity
find the entity by id
deletebyid
delete

To preform the CRUD operations on the our entity
we extends the JpaRepository with StudentRepository interface

JpaRepository requires --- two parameters
JpaRepository<T,ID>---T-->class name/entity name
		      ID--->datatype of @Id with WrapperClass	
-----------------------------------------------------------
To perform the integration between Angular and the spring 
---Annotation used on RestController class
---@CrossOrigin(origins = "http://localhost:4200")
---Cross-origin resource sharing (CORS) : standard protocol 
---defines the interaction between a browser and a server 
   for safely handling cross-origin HTTP requests.

